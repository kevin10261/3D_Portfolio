import {
  require_react
} from "./chunk-D2P3IO6H.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/react-clouds/dist/index.esm.js
var import_react = __toESM(require_react());
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var Clouds = function(_a) {
  var _b = _a.size, size = _b === void 0 ? 100 : _b, _c = _a.color, color = _c === void 0 ? "#fff0f3" : _c, _d = _a.bottomOffset, bottomOffset = _d === void 0 ? 0 : _d, _e = _a.xMinMultiplier, xMinMultiplier = _e === void 0 ? 0.45 : _e, _f = _a.xMaxMultiplier, xMaxMultiplier = _f === void 0 ? 0.6 : _f, _g = _a.yMinMultiplier, yMinMultiplier = _g === void 0 ? 0.05 : _g, _h = _a.yMaxMultiplier, yMaxMultiplier = _h === void 0 ? 0.25 : _h, _j = _a.initialXOffset, initialXOffset = _j === void 0 ? 0.45 : _j, _k = _a.className, className = _k === void 0 ? "" : _k, _l = _a.style, style = _l === void 0 ? {} : _l;
  var _m = (0, import_react.useState)(""), boxShadow = _m[0], setBoxShadow = _m[1];
  var cloudRef = (0, import_react.useRef)(null);
  var generateShadows = function() {
    var _a2;
    if (!cloudRef.current)
      return;
    var containerWidth = ((_a2 = cloudRef.current.parentElement) === null || _a2 === void 0 ? void 0 : _a2.offsetWidth) || window.innerWidth;
    var shadows = [];
    var currentX = size * initialXOffset;
    while (currentX < containerWidth + size) {
      var yOffset = Math.floor(Math.random() * (size * (yMaxMultiplier - yMinMultiplier)) + size * yMinMultiplier);
      shadows.push("".concat(currentX, "px ").concat(yOffset, "px ").concat(color));
      var xIncrement = size * (xMinMultiplier + Math.random() * (xMaxMultiplier - xMinMultiplier));
      currentX += xIncrement;
    }
    setBoxShadow(shadows.join(", "));
  };
  (0, import_react.useEffect)(function() {
    generateShadows();
    var handleResize = function() {
      generateShadows();
    };
    window.addEventListener("resize", handleResize);
    return function() {
      return window.removeEventListener("resize", handleResize);
    };
  }, [
    size,
    color,
    xMinMultiplier,
    xMaxMultiplier,
    yMinMultiplier,
    yMaxMultiplier,
    initialXOffset
  ]);
  return import_react.default.createElement("div", { ref: cloudRef, className, style: __assign({ position: "absolute", width: "".concat(size, "px"), height: "".concat(size, "px"), borderRadius: "50%", backgroundColor: color, zIndex: 5, bottom: "".concat(-size * 0.1 + bottomOffset, "px"), left: "".concat(-size * 0.2, "px"), boxShadow }, style) });
};
var CloudLayers = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.style, style = _c === void 0 ? {} : _c, _d = _a.backgroundColor, backgroundColor = _d === void 0 ? "#ffa6b9" : _d, _e = _a.height, height = _e === void 0 ? "24rem" : _e, _f = _a.shadowOpacity, shadowOpacity = _f === void 0 ? 0.1 : _f, _g = _a.layers, layers = _g === void 0 ? [
    {
      size: 120,
      color: "#ffdbde",
      bottomOffset: 160,
      randomization: {
        xMin: 0.5,
        xMax: 0.7,
        yMin: 0.1,
        yMax: 0.3,
        initialX: 0.4
      }
    },
    {
      size: 110,
      color: "#ffe4e9",
      bottomOffset: 80,
      randomization: {
        xMin: 0.45,
        xMax: 0.65,
        yMin: 0.05,
        yMax: 0.25,
        initialX: 0.45
      }
    },
    {
      size: 100,
      color: "#ffffff",
      bottomOffset: 0,
      randomization: {
        xMin: 0.4,
        xMax: 0.6,
        yMin: 0.03,
        yMax: 0.2,
        initialX: 0.5
      }
    }
  ] : _g;
  return import_react.default.createElement("div", { className: "relative ".concat(className), style: __assign({ backgroundColor, height, width: "100%", overflow: "hidden" }, style) }, layers.map(function(layer, index) {
    var _a2, _b2, _c2, _d2, _e2;
    return import_react.default.createElement(
      "div",
      { key: index, style: {
        position: "absolute",
        width: "100%",
        height: "100%",
        filter: "drop-shadow(0 2px 3px rgba(0, 0, 0, ".concat(shadowOpacity * (1 - index * 0.2), "))")
      } },
      import_react.default.createElement(Clouds, { size: layer.size, color: layer.color, bottomOffset: layer.bottomOffset, xMinMultiplier: (_a2 = layer.randomization) === null || _a2 === void 0 ? void 0 : _a2.xMin, xMaxMultiplier: (_b2 = layer.randomization) === null || _b2 === void 0 ? void 0 : _b2.xMax, yMinMultiplier: (_c2 = layer.randomization) === null || _c2 === void 0 ? void 0 : _c2.yMin, yMaxMultiplier: (_d2 = layer.randomization) === null || _d2 === void 0 ? void 0 : _d2.yMax, initialXOffset: (_e2 = layer.randomization) === null || _e2 === void 0 ? void 0 : _e2.initialX })
    );
  }));
};
export {
  CloudLayers,
  Clouds
};
//# sourceMappingURL=react-clouds.js.map
